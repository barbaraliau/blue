<!-- views/projects/project.ejs -->
<html>
<head>
  <title>Blue Projects</title>
  <meta charset = "UTF-8" />
  <script type = "text/javascript" src="/js/jquery-2.1.3.min.js"></script>
  <script type = "text/javascript" src="/js/jquery-ui.js"></script>
  <script type = "text/javascript" src="/js/bootstrap.min.js"></script>
  <script type = "text/javascript" src="/js/bootstrap-editable.min.js"></script>
  <script type = "text/javascript">
    $(init);
    function init(){
      $("#tabs").tabs();
    }
  </script>
</head>
<body>
<% include ../header %>
  <% include ./boards/index %>

  <script src="/js/jquery.sortable.js"></script>
  <script>

    console.log("board-column > ul: ", $('.board-column > ul'));
    $(function() {
      if (typeof($('.board-column > ul')) !== 'undefined') {
        console.log("board-column > ul: ", $('.board-column > ul'));
        $('.board-column > ul').sortable({
          connectWith: '.connected',
          dropOnEmpty: true,
        });
      };
    });
    $('ul.sortable').sortable({
      dropOnEmpty: true,
      forcePlaceholderSize: true,
    });
    $('.sortable').sortable({
      items: 'li' ,
      forcePlaceholderSize: true,
      dropOnEmpty: true,
      //    placeholder : '<tr><td colspan="7">&nbsp;</td></tr>'
    });
    $('.sortable').sortable().bind('sortupdate', function(err, ui) {
      /*
        This event is triggered when the user stopped sorting and the DOM position has changed.
        ui.item contains the current dragged element.
        ui.item.index() contains the new index of the dragged element
        ui.oldindex contains the old index of the dragged element
        ui.startparent contains the element that the dragged item comes from
        ui.endparent contains the element that the dragged item was added to
      */
      //$.GET('/projects/action/moveCard', {cardId: card.cardId, boardName: board.name, columnName: ui.endparent}, function(data){
      console.log("UI: ", ui);
      console.log("parent node id (target column):" + ui.item[0].parentNode.id); // Where the card is moving to
      console.log("item id:" + ui.item[0].id);
      console.log("project: " + ui.item[0].childNodes[0].ownerDocument.title);
      //console.log("board name: ", $(this).closest('.row').find('.inputQty'));
      console.log("board name: ", $('li[role="tab"].ui-tabs-active a').text());

      var order = $('ul.sortable li').map(function(){
        console.log($(this).data("id"));
        return $(this).data("id");
      }).get();

      // Should be a patch instead of post
      $.ajax({
        type: "POST",
        //url: "{{ URL::route('chapter.departmentSort', $chapter->slug) }}",
        url: "/card/move",
        dataType: "json",
        data: {cardId: ui.item[0].id, newColumnId: ui.item[0].parentNode.id, boardName: $('li[role="tab"].ui-tabs-active a').text()},
        success: function(order){
          console.log("Order: ", order);
        }
      });
    });

    // setting defaults for the editable
    $.fn.editable.defaults.mode = 'inline';
    $.fn.editable.defaults.showbuttons = false;
    $.fn.editable.defaults.url = '/post';
    $.fn.editable.defaults.type = 'text';

    // make all items having class 'edit' editable
    $('.edit').editable();

    // make username1 editable
    $('#board-column-name').editable({
      type: 'text',
      pk: 1,
      url: '/post',
      title: 'Column Title'
    });

    // this is to automatically make the next item in the table editable
    $('.edit').on('save', function(e, params){
      var that = this;
      // persist the old value in the element to be restored when clicking reset
      var oldItemValue = $(that)[0].innerHTML;
      if (!$(that).attr('oldValue')) {
        console.log('persisting original value: ' + oldItemValue)
        $(that).attr('oldValue', oldItemValue);
      }
      setTimeout(function() {
        // first search the row
        var item = $(that).closest('td').next().find('.edit');
        console.log(item);
        if (item.length == 0) {
          // check the next row
          item = $(that).closest('tr').next().find('.edit');
        }
        item.editable('show');
      }, 200);
    });

    $('#resetbtn').click(function() {
      $('.edit').each(function() {
        var o = $(this);
        o.editable('setValue', o.attr('oldValue'))  //clear values
        .editable('option', 'pk', o.attr('pk'))  //clear pk
        .removeClass('editable-unsaved')
        .removeAttr('oldValue');
      });
    });

    $('#savebtn').click(function() {
      $('.edit').editable('submit', {
        url: '/post',
        //ajaxOptions: { dataType: 'json' },
        success: function(data, config) {
          $(this).removeClass('editable-unsaved') //remove unsaved class
          .removeAttr('oldValue');  // clear oldValue
        },
        error: function(errors) {
          console.log('error');
          var msg = '';
          if(errors && errors.responseText) { //ajax error, errors = xhr object
            msg = errors.responseText;
          } else { //validation error (client-side or server-side)
            $.each(errors, function(k, v) { msg += k+": "+v+"<br>"; });
          }
        }
      });
    });

    var defaultBoardId = String;
    <% boards.forEach( function ( board ) { %>
      <% if (board._id === board._id) { defaultBoardId = board._id; }; %>
      $('#tabs-<%= board.id %>').click(function (e) {
        e.preventDefault()
        $(this).tab('show')
      });
    <% }); %>

    // Use to select default tab
    // $('#myTab a[href="#profile"]').tab('show')
    //$('#tabs-' + defaultBoardId + ' a:first').tab('show')

    // Modal control scripts
    // $('button[data-target="#addColumnModal"]').on('shown.bs.tab', function (e) {
    $('#addColumnModal').on('shown.bs.modal', function (e) {
      var button = e.relatedTarget;
      var boardId = button.data('boardid');
      var projectName = button.data('projectname');
      $(this).find('board-id-input').val(boardId);
      $(this).find('project-name-input').val(projectName);
    })
    //$('button[data-target="#addColumnModal"]').on('shown.bs.tab', function (e) {
    //    e.target // newly activated tab
    //      e.relatedTarget // previous active tab
    //})
    $('#editCardModal').on('show.bs.modal', function(e) {
      console.log("RelatedTarget: ",e.relatedTarget);
      var columnId = $(e.relatedTarget).data('columnid');
      var projectName = $(e.relatedTarget).data('projectname');
      var cardId = $(e.relatedTarget).data('cardid');
      var cardName = $(e.relatedTarget).data('cardname');
      var cardDescription = $(e.relatedTarget).data('carddescription');
      console.log("columnId: ",columnId,"projectName:",projectName,"cardId:",cardId,"cardName:",cardName,"cardDescription:",cardDescription);   $(e.currentTarget).find('input[name="columnId"]').val(columnId);
      $(e.currentTarget).find('input[name="projectName"]').val(projectName);
      $(e.currentTarget).find('input[name="cardId"]').val(cardId);
      $(e.currentTarget).find('input[name="cardName"]').val(cardName);
      $(e.currentTarget).find('input[name="cardDescription"]').val(cardDescription);
      $('#cardName').focus();
    });
    /**
    var content = $($("#FormDialog").html());
    OpenDialogForSelectionAdmItem('Enter Info', content, function() {
        alert('saved');
    });

    $("body").on("click", "#deletePhone", function() {
        var msg = "Are you sure you want to delete this phone number?";
        OpenDialogForSelectionAdmItem('Delete?', msg, function() {
            alert('deleted');
        },1);
    });

    function OpenDialogForSelectionAdmItem(title, content, callback, tier) {
        tier = tier || 0;
        var dlg = new BootstrapDialog({
            title: title,
            message: content,
            buttons: [{
                label: 'Save',
                cssClass: 'btn-primary',
                id: 'btnSave',
                action: function (dialog) {
                    if (callback !== "") { callback(); }
                    dialog.close();
                }
            },{
                label: 'Close',
                cssClass: 'btn',
                id: 'btnClose',
                action: function (dialog) {
                    dialog.close();
                }
            }]
        });

        dlg.open();
    }
    */
  </script>
<% include ../footer %>
